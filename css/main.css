/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  color-scheme: light;
  --in: 0.7206 0.191 231.6;
  --su: 64.8% 0.150 160;
  --wa: 0.8471 0.199 83.87;
  --er: 0.7176 0.221 22.18;
  --pc: 0.89824 0.06192 275.75;
  --ac: 0.15352 0.0368 183.61;
  --inc: 0 0 0;
  --suc: 0 0 0;
  --wac: 0 0 0;
  --erc: 0 0 0;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 0.4912 0.3096 275.75;
  --s: 0.6971 0.329 342.55;
  --sc: 0.9871 0.0106 342.55;
  --a: 0.7676 0.184 183.61;
  --n: 0.321785 0.02476 255.701624;
  --nc: 0.894994 0.011585 252.096176;
  --b1: 1 0 0;
  --b2: 0.961151 0 0;
  --b3: 0.924169 0.00108 197.137559;
  --bc: 0.278078 0.029596 256.847952;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --in: 0.7206 0.191 231.6;
    --su: 64.8% 0.150 160;
    --wa: 0.8471 0.199 83.87;
    --er: 0.7176 0.221 22.18;
    --pc: 0.13138 0.0392 275.75;
    --sc: 0.1496 0.052 342.55;
    --ac: 0.14902 0.0334 183.61;
    --inc: 0 0 0;
    --suc: 0 0 0;
    --wac: 0 0 0;
    --erc: 0 0 0;
    --rounded-box: 1rem;
    --rounded-btn: 0.5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 0.6569 0.196 275.75;
    --s: 0.748 0.26 342.55;
    --a: 0.7451 0.167 183.61;
    --n: 0.313815 0.021108 254.139175;
    --nc: 0.746477 0.0216 264.435964;
    --b1: 0.253267 0.015896 252.417568;
    --b2: 0.232607 0.013807 253.100675;
    --b3: 0.211484 0.01165 254.087939;
    --bc: 0.746477 0.0216 264.435964;
  }
}

[data-theme=light] {
  color-scheme: light;
  --in: 0.7206 0.191 231.6;
  --su: 64.8% 0.150 160;
  --wa: 0.8471 0.199 83.87;
  --er: 0.7176 0.221 22.18;
  --pc: 0.89824 0.06192 275.75;
  --ac: 0.15352 0.0368 183.61;
  --inc: 0 0 0;
  --suc: 0 0 0;
  --wac: 0 0 0;
  --erc: 0 0 0;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 0.4912 0.3096 275.75;
  --s: 0.6971 0.329 342.55;
  --sc: 0.9871 0.0106 342.55;
  --a: 0.7676 0.184 183.61;
  --n: 0.321785 0.02476 255.701624;
  --nc: 0.894994 0.011585 252.096176;
  --b1: 1 0 0;
  --b2: 0.961151 0 0;
  --b3: 0.924169 0.00108 197.137559;
  --bc: 0.278078 0.029596 256.847952;
}

[data-theme=dark] {
  color-scheme: dark;
  --in: 0.7206 0.191 231.6;
  --su: 64.8% 0.150 160;
  --wa: 0.8471 0.199 83.87;
  --er: 0.7176 0.221 22.18;
  --pc: 0.13138 0.0392 275.75;
  --sc: 0.1496 0.052 342.55;
  --ac: 0.14902 0.0334 183.61;
  --inc: 0 0 0;
  --suc: 0 0 0;
  --wac: 0 0 0;
  --erc: 0 0 0;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 0.6569 0.196 275.75;
  --s: 0.748 0.26 342.55;
  --a: 0.7451 0.167 183.61;
  --n: 0.313815 0.021108 254.139175;
  --nc: 0.746477 0.0216 264.435964;
  --b1: 0.253267 0.015896 252.417568;
  --b2: 0.232607 0.013807 253.100675;
  --b3: 0.211484 0.01165 254.087939;
  --bc: 0.746477 0.0216 264.435964;
}

p,
  div,
  h1,
  a {
  font-family: roboto;
  font-size: 12px;
  text-transform: capitalize;
  --tw-text-opacity: 1;
  color: rgb(29 33 48 / var(--tw-text-opacity));
}

@media (min-width: 768px) {
  p,
  div,
  h1,
  a {
    font-size: 16px;
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  height: 1.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  width: -moz-fit-content;
  width: fit-content;
  padding-left: 0.563rem;
  padding-right: 0.563rem;
  border-radius: var(--rounded-badge, 1.9rem);
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
}

@media (hover:hover) {
  .label a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  }

  .menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }
}

.btn {
  display: inline-flex;
  height: 3rem;
  min-height: 3rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.5rem);
  border-color: transparent;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1em;
  gap: 0.5rem;
  font-weight: 600;
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--fallback-bc,oklch(var(--bc)/1));
  --chkfg: var(--fallback-b1,oklch(var(--b1)/1));
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
  --tw-border-opacity: 0.2;
}

.drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
  width: 100%;
}

.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: 0px;
}

.drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-y: auto;
  overscroll-behavior: contain;
  height: 100vh;
  height: 100dvh;
}

.drawer-side > .drawer-overlay {
  position: sticky;
  top: 0px;
  place-self: stretch;
  cursor: pointer;
  background-color: transparent;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
}

.drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.drawer-side > *:not(.drawer-overlay) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  will-change: transform;
  transform: translateX(-100%);
}

[dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(100%);
}

.drawer-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0;
}

.drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(0%);
}

.drawer-end {
  grid-auto-columns: auto max-content;
}

.drawer-end .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}

.drawer-end .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}

.drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(100%);
}

[dir="rtl"] .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(-100%);
}

.drawer-end .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(0%);
}

@media (hover: hover) {
  .btn:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn:disabled:hover {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: 0.2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: 0.2;
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover, :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(.active):hover, :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(.active):hover {
      background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    }
  }
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.5rem;
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }

  .footer-center {
    grid-auto-flow: row dense;
  }
}

.label {
  display: flex;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: space-between;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.input {
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  border-width: 1px;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
}

.join {
  display: inline-flex;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.5rem);
}

.join :where(.join-item) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.join .dropdown .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .dropdown .join-item {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

.join :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}

.join .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

@supports not selector(:has(*)) {
  :where(.join *) {
    border-radius: inherit;
  }
}

@supports selector(:has(*)) {
  :where(.join *:has(.join-item)) {
    border-radius: inherit;
  }
}

.link {
  cursor: pointer;
  text-decoration-line: underline;
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  padding: 0.5rem;
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu li.disabled {
  cursor: not-allowed;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.menu li) .badge {
  justify-self: end;
}

.btm-nav > * .label {
  font-size: 1rem;
  line-height: 1.5rem;
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.checkbox:focus {
  box-shadow: none;
}

.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-color: var(--chkbg);
  background-image: linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%),
      linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
      linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
      linear-gradient(
        45deg,
        var(--chkbg) 30%,
        var(--chkfg) 30.99%,
        var(--chkfg) 40%,
        transparent 40.99%
      ),
      linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}

.checkbox:indeterminate {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  background-repeat: no-repeat;
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%);
}

.checkbox:disabled {
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.2;
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
  background-color: #0006;
}

.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.input input:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.input:focus,
  .input:focus-within {
  box-shadow: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.input-disabled,
  .input:disabled,
  .input[disabled] {
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
}

.input-disabled::-moz-placeholder, .input:disabled::-moz-placeholder, .input[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}

.input-disabled::placeholder,
  .input:disabled::placeholder,
  .input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
  --tw-placeholder-opacity: 0.2;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.join > :where(*:not(:first-child)) {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-start: -1px;
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li ul):before {
  position: absolute;
  bottom: 0.75rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
  opacity: 0.1;
  content: "";
}

.menu :where(li:not(.menu-title) > *:not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--rounded-btn, 0.5rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

:where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > *:not(ul):not(details):not(.menu-title)):is(summary):not(.active):focus-visible,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active).focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(summary):not(.active):focus,
  :where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(summary):not(.active):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li > *:not(ul):not(.menu-title):not(details):active,
.menu li > *:not(ul):not(.menu-title):not(details).active,
.menu li > details > summary:active {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
  justify-self: end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0;
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
  padding-left: 2rem;
  direction: ltr;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  left: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  left: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

@keyframes modal-pop {
  0% {
    opacity: 0;
  }
}

@keyframes progress-loading {
  50% {
    background-position-x: -115%;
  }
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }

  50% {
    box-shadow: 0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }

  100% {
    box-shadow: 0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,
      0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset;
  }
}

@keyframes rating-pop {
  0% {
    transform: translateY(-0.125em);
  }

  40% {
    transform: translateY(-0.125em);
  }

  100% {
    transform: translateY(0);
  }
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

@keyframes toast-pop {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.drawer-open > .drawer-toggle {
  display: none;
}

.drawer-open > .drawer-toggle ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  position: sticky;
  display: block;
  width: auto;
  overscroll-behavior: auto;
}

.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(0%);
}

[dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  transform: translateX(0%);
}

.drawer-open > .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.join.join-vertical {
  flex-direction: column;
}

.join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item {
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
}

.join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item {
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.join.join-horizontal {
  flex-direction: row;
}

.join.join-horizontal .join-item:first-child:not(:last-child),
  .join.join-horizontal *:first-child:not(:last-child) .join-item {
  border-end-end-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}

.join.join-horizontal .join-item:last-child:not(:first-child),
  .join.join-horizontal *:last-child:not(:first-child) .join-item {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
  border-end-end-radius: inherit;
  border-start-end-radius: inherit;
}

.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
  cursor: default;
  background-color: transparent;
}

.join.join-vertical > :where(*:not(:first-child)) {
  margin-left: 0px;
  margin-right: 0px;
  margin-top: -1px;
}

.join.join-horizontal > :where(*:not(:first-child)) {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-start: -1px;
}

.container {
  display: flex;
  height: inherit;
  width: 90%;
  justify-content: space-between;
}

.donate {
  width: -moz-fit-content;
  width: fit-content;
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgb(29 33 48 / var(--tw-bg-opacity));
  padding-top: 12px;
  padding-bottom: 12px;
  padding-left: 32px;
  padding-right: 32px;
  font-family: roboto;
  font-size: 19px;
  font-weight: 500;
  text-transform: capitalize;
  line-height: 40px;
  letter-spacing: 0.1em;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.video {
  height: 578px;
  width: 480px;
}

.four {
  display: grid;
  width: 100%;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 0.75rem;
}

@media (min-width: 640px) {
  .four {
    margin-left: 1rem;
    display: flex;
    flex-direction: column;
    place-items: stretch;
    gap: 30px;
  }
}

.sec {
  display: flex;
  width: 100%;
  justify-content: center;
}

@media (min-width: 640px) {
  .sec {
    gap: 20px;
  }
}

.botn {
  position: absolute;
  bottom: -35%;
  z-index: 20;
  box-sizing: border-box;
  border-radius: 5px;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 2px;
  padding-bottom: 2px;
  font-weight: 600;
  text-transform: capitalize;
  line-height: 25px;
  --tw-text-opacity: 1;
  color: rgb(29 33 48 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .botn {
    position: static;
    border-radius: 8px;
    line-height: 30px;
  }
}

@media (min-width: 768px) {
  .botn {
    padding-top: 14px;
    padding-bottom: 14px;
    padding-left: 30px;
    padding-right: 30px;
  }
}

.square {
  height: 8px;
  width: 8px;
  border-radius: 0.125rem;
}

@media (min-width: 640px) {
  .square {
    height: 16px;
    width: 16px;
  }
}

.caption {
  font-size: 8px;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .caption {
    font-size: 16px;
  }
}

.footer {
  display: flex;
  width: 100%;
  justify-content: center;
  --tw-bg-opacity: 1;
  background-color: rgb(11 7 6 / var(--tw-bg-opacity));
}

.link {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  text-decoration-line: none;
}

@media (min-width: 640px) {
  .link {
    font-size: 14px;
  }
}

.centery {
  margin-top: 20px;
  margin-bottom: 20px;
  display: flex;
  justify-content: center;
}

@media (min-width: 640px) {
  .centery {
    margin-top: 95px;
    margin-bottom: 95px;
  }
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-\[15px\] {
  bottom: 15px;
}

.left-\[5px\] {
  left: 5px;
}

.right-0 {
  right: 0px;
}

.top-\[14px\] {
  top: 14px;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.my-\[20px\] {
  margin-top: 20px;
  margin-bottom: 20px;
}

.my-\[30px\] {
  margin-top: 30px;
  margin-bottom: 30px;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-\[20px\] {
  margin-bottom: 20px;
}

.mb-\[25px\] {
  margin-bottom: 25px;
}

.mb-\[30px\] {
  margin-bottom: 30px;
}

.mb-\[5px\] {
  margin-bottom: 5px;
}

.mb-\[90px\] {
  margin-bottom: 90px;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-\[14px\] {
  margin-left: 14px;
}

.ml-\[15px\] {
  margin-left: 15px;
}

.ml-\[24px\] {
  margin-left: 24px;
}

.ml-\[6\.6\%\] {
  margin-left: 6.6%;
}

.mr-3 {
  margin-right: 0.75rem;
}

.mr-\[10px\] {
  margin-right: 10px;
}

.mr-\[5px\] {
  margin-right: 5px;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-9 {
  margin-top: 2.25rem;
}

.mt-\[16px\] {
  margin-top: 16px;
}

.mt-\[20px\] {
  margin-top: 20px;
}

.mt-\[25px\] {
  margin-top: 25px;
}

.mt-\[30px\] {
  margin-top: 30px;
}

.mt-\[64px\] {
  margin-top: 64px;
}

.mt-\[6px\] {
  margin-top: 6px;
}

.mt-\[75px\] {
  margin-top: 75px;
}

.box-border {
  box-sizing: border-box;
}

.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-\[150px\] {
  height: 150px;
}

.h-\[1px\] {
  height: 1px;
}

.h-\[20px\] {
  height: 20px;
}

.h-\[2px\] {
  height: 2px;
}

.h-\[67px\] {
  height: 67px;
}

.h-\[inherit\] {
  height: inherit;
}

.h-auto {
  height: auto;
}

.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}

.h-full {
  height: 100%;
}

.max-h-\[448px\] {
  max-height: 448px;
}

.max-h-\[528px\] {
  max-height: 528px;
}

.min-h-7 {
  min-height: 1.75rem;
}

.min-h-full {
  min-height: 100%;
}

.w-80 {
  width: 20rem;
}

.w-\[100\%\] {
  width: 100%;
}

.w-\[10px\] {
  width: 10px;
}

.w-\[160px\] {
  width: 160px;
}

.w-\[20\%\] {
  width: 20%;
}

.w-\[20px\] {
  width: 20px;
}

.w-\[25px\] {
  width: 25px;
}

.w-\[30px\] {
  width: 30px;
}

.w-\[40\%\] {
  width: 40%;
}

.w-\[50\%\] {
  width: 50%;
}

.w-\[60\%\] {
  width: 60%;
}

.w-\[70\%\] {
  width: 70%;
}

.w-\[73\%\] {
  width: 73%;
}

.w-\[80\%\] {
  width: 80%;
}

.w-\[800px\] {
  width: 800px;
}

.w-\[90\%\] {
  width: 90%;
}

.w-\[95\%\] {
  width: 95%;
}

.w-\[inherit\] {
  width: inherit;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.min-w-14 {
  min-width: 3.5rem;
}

.min-w-\[90px\] {
  min-width: 90px;
}

.max-w-\[190px\] {
  max-width: 190px;
}

.max-w-\[430px\] {
  max-width: 430px;
}

.max-w-\[647px\] {
  max-width: 647px;
}

.basis-1\/3 {
  flex-basis: 33.333333%;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-rows-6 {
  grid-template-rows: repeat(6, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-items-center {
  justify-items: center;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-\[15px\] {
  gap: 15px;
}

.gap-\[25px\] {
  gap: 25px;
}

.gap-\[40px\] {
  gap: 40px;
}

.gap-\[8px\] {
  gap: 8px;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-x-5 {
  -moz-column-gap: 1.25rem;
       column-gap: 1.25rem;
}

.gap-x-\[64px\] {
  -moz-column-gap: 64px;
       column-gap: 64px;
}

.gap-y-1 {
  row-gap: 0.25rem;
}

.gap-y-2 {
  row-gap: 0.5rem;
}

.gap-y-3 {
  row-gap: 0.75rem;
}

.gap-y-5 {
  row-gap: 1.25rem;
}

.gap-y-7 {
  row-gap: 1.75rem;
}

.gap-y-\[48px\] {
  row-gap: 48px;
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-\[4px\] {
  border-radius: 4px;
}

.rounded-\[5px\] {
  border-radius: 5px;
}

.rounded-\[8px\] {
  border-radius: 8px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-none {
  border-style: none;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.border-blue-800 {
  --tw-border-opacity: 1;
  border-color: rgb(30 64 175 / var(--tw-border-opacity));
}

.bg-\[\#0B0706\] {
  --tw-bg-opacity: 1;
  background-color: rgb(11 7 6 / var(--tw-bg-opacity));
}

.bg-\[\#AC94F1\] {
  --tw-bg-opacity: 1;
  background-color: rgb(172 148 241 / var(--tw-bg-opacity));
}

.bg-\[\#BEF3C0\] {
  --tw-bg-opacity: 1;
  background-color: rgb(190 243 192 / var(--tw-bg-opacity));
}

.bg-\[\#F38FBF\] {
  --tw-bg-opacity: 1;
  background-color: rgb(243 143 191 / var(--tw-bg-opacity));
}

.bg-\[\#F9CF64\] {
  --tw-bg-opacity: 1;
  background-color: rgb(249 207 100 / var(--tw-bg-opacity));
}

.bg-\[\#FFF0CA\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 240 202 / var(--tw-bg-opacity));
}

.bg-back-green {
  --tw-bg-opacity: 1;
  background-color: rgb(239 247 242 / var(--tw-bg-opacity));
}

.bg-base-200 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-black\/55 {
  background-color: rgb(0 0 0 / 0.55);
}

.bg-primary-blue {
  --tw-bg-opacity: 1;
  background-color: rgb(29 33 48 / var(--tw-bg-opacity));
}

.bg-primary-green {
  --tw-bg-opacity: 1;
  background-color: rgb(112 193 116 / var(--tw-bg-opacity));
}

.bg-slate-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
}

.bg-slate-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(203 213 225 / var(--tw-bg-opacity));
}

.bg-slate-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-1 {
  padding: 0.25rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-\[10px\] {
  padding: 10px;
}

.p-\[5px\] {
  padding: 5px;
}

.p-3 {
  padding: 0.75rem;
}

.px-\[10px\] {
  padding-left: 10px;
  padding-right: 10px;
}

.px-\[12px\] {
  padding-left: 12px;
  padding-right: 12px;
}

.px-\[22px\] {
  padding-left: 22px;
  padding-right: 22px;
}

.px-\[5px\] {
  padding-left: 5px;
  padding-right: 5px;
}

.px-\[7px\] {
  padding-left: 7px;
  padding-right: 7px;
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}

.py-\[12px\] {
  padding-top: 12px;
  padding-bottom: 12px;
}

.py-\[20px\] {
  padding-top: 20px;
  padding-bottom: 20px;
}

.py-\[2px\] {
  padding-top: 2px;
  padding-bottom: 2px;
}

.py-\[5px\] {
  padding-top: 5px;
  padding-bottom: 5px;
}

.py-\[6px\] {
  padding-top: 6px;
  padding-bottom: 6px;
}

.py-\[96px\] {
  padding-top: 96px;
  padding-bottom: 96px;
}

.pb-\[30px\] {
  padding-bottom: 30px;
}

.pl-3 {
  padding-left: 0.75rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.align-middle {
  vertical-align: middle;
}

.font-roboto {
  font-family: roboto;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-\[11px\] {
  font-size: 11px;
}

.text-\[13px\] {
  font-size: 13px;
}

.text-\[14px\] {
  font-size: 14px;
}

.text-\[15px\] {
  font-size: 15px;
}

.text-\[16px\] {
  font-size: 16px;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[20px\] {
  font-size: 20px;
}

.text-\[24px\] {
  font-size: 24px;
}

.text-\[48px\] {
  font-size: 48px;
}

.text-\[6px\] {
  font-size: 6px;
}

.text-\[8px\] {
  font-size: 8px;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.capitalize {
  text-transform: capitalize;
}

.leading-\[25px\] {
  line-height: 25px;
}

.leading-\[30px\] {
  line-height: 30px;
}

.leading-\[57\.6px\] {
  line-height: 57.6px;
}

.leading-relaxed {
  line-height: 1.625;
}

.text-\[\#1d2130\] {
  --tw-text-opacity: 1;
  color: rgb(29 33 48 / var(--tw-text-opacity));
}

.text-\[\#525560\] {
  --tw-text-opacity: 1;
  color: rgb(82 85 96 / var(--tw-text-opacity));
}

.text-\[\#727570\] {
  --tw-text-opacity: 1;
  color: rgb(114 117 112 / var(--tw-text-opacity));
}

.text-\[\#ccc\] {
  --tw-text-opacity: 1;
  color: rgb(204 204 204 / var(--tw-text-opacity));
}

.text-base-content {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-linear {
  transition-timing-function: linear;
}

@font-face {
  font-family: roboto;

  src: url(../fonts/Roboto-Regular.eot);

  src: url(../fonts/Roboto-Regular.ttf);

  src: url(../fonts/Roboto-Regular.woff);

  src: url(../fonts/Roboto-Regular.woff2);
}

@font-face {
  font-family: med;

  src: url(../fonts/Roboto-Medium.eot);

  src: url(../fonts/Roboto-Medium.ttf);

  src: url(../fonts/Roboto-Medium.woff);

  src: url(../fonts/Roboto-Medium.woff2);
}

.group:hover .group-hover\:glass-card {
  background: white;
  background: linear-gradient(
      to right bottom,
      rgba(1, 1, 1, 0.1),
      rgba(1, 1, 1, 0.2)
    );
  -webkit-backdrop-filter: blur(1rem);
          backdrop-filter: blur(1rem);
}

@media not all and (min-width: 640px) {
  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .max-sm\:card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .max-sm\:card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  }

  .max-sm\:card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .max-sm\:card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  }

  .max-sm\:card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .max-sm\:card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
  }

  .max-sm\:card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
  }

  .max-sm\:card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .max-sm\:card figure {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .max-sm\:card.image-full {
    display: grid;
  }

  .max-sm\:card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: 0.75;
  }

  .max-sm\:card.image-full:before,.max-sm\:card.image-full > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }

  .max-sm\:card.image-full > figure img {
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }

  .max-sm\:card.image-full > .card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
  }

  .max-sm\:card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
  }

  .max-sm\:card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
  }

  .max-sm\:card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .max-sm\:card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
  }

  .max-sm\:card.compact .card-body {
    padding: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .max-sm\:card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit;
  }

  .max-sm\:card {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .max-sm\:mobile {
    flex-direction: column-reverse;
    box-sizing: border-box;
    padding: 10px;
  }
}

@media (min-width: 640px) {
  .sm\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .sm\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .sm\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .sm\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .sm\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .sm\:container {
      max-width: 1536px;
    }
  }

  .sm\:container {
    display: flex;
    height: inherit;
    width: 90%;
    justify-content: space-between;
  }

  .sm\:wwd {
    width: -moz-fit-content;
    width: fit-content;
    border-radius: 8px;
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    padding-top: 16px;
    padding-bottom: 16px;
    padding-left: 32px;
    padding-right: 32px;
    font-weight: 600;
    text-transform: capitalize;
    line-height: 30px;
  }

  .sm\:lrn {
    border-radius: 8px;
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: rgb(112 193 116 / var(--tw-bg-opacity));
    font-weight: 600;
    text-transform: capitalize;
    line-height: 30px;
  }

  @media (min-width: 768px) {
    .sm\:lrn {
      padding-top: 16px;
      padding-bottom: 16px;
      padding-left: 32px;
      padding-right: 32px;
    }
  }

  .sm\:bar {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 30px;
    padding-left: 16px;
    padding-right: 16px;
  }

  .sm\:donate {
    width: -moz-fit-content;
    width: fit-content;
    border-radius: 0.375rem;
    --tw-bg-opacity: 1;
    background-color: rgb(29 33 48 / var(--tw-bg-opacity));
    padding-top: 12px;
    padding-bottom: 12px;
    padding-left: 32px;
    padding-right: 32px;
    font-family: roboto;
    font-size: 19px;
    font-weight: 500;
    text-transform: capitalize;
    line-height: 40px;
    letter-spacing: 0.1em;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

  .sm\:img-title {
    margin-top: 128px;
    width: 640px;
    font-family: roboto;
    font-size: 64px;
    font-weight: 700;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

  .sm\:video {
    height: 578px;
    width: 480px;
  }

  .sm\:line {
    margin-top: 70px;
    height: 2px;
    width: 73px;
    --tw-bg-opacity: 1;
    background-color: rgb(29 33 48 / var(--tw-bg-opacity));
  }

  .sm\:support {
    margin-top: 60px;
  }

  .sm\:detail {
    justify-content: space-evenly;
    gap: 0.25rem;
  }

  @media (min-width: 700px) {
    .sm\:detail {
      align-items: center;
    }
  }

  .sm\:vision {
    position: absolute;
    top: 400px;
    display: flex;
    justify-content: center;
    gap: 95px;
  }
}

.hover\:bg-primary-blue:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(29 33 48 / var(--tw-bg-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:shadow-\[0px_01px_20px_5px_rgba\(124\2c 124\2c 124\2c 1\)\]:hover {
  --tw-shadow: 0px 01px 20px 5px rgba(124,124,124,1);
  --tw-shadow-colored: 0px 01px 20px 5px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-\[0px_10px_30px_rgba\(124\2c 124\2c 124\2c 1\)\]:hover {
  --tw-shadow: 0px 10px 30px rgba(124,124,124,1);
  --tw-shadow-colored: 0px 10px 30px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.group:hover .group-hover\:bottom-4 {
  bottom: 1rem;
}

@media (max-width: 1200px) {
  .max-\[1200px\]\:h-12 {
    height: 3rem;
  }

  .max-\[1200px\]\:w-\[70\%\] {
    width: 70%;
  }

  .max-\[1200px\]\:flex-wrap {
    flex-wrap: wrap;
  }

  .max-\[1200px\]\:gap-2 {
    gap: 0.5rem;
  }

  .max-\[1200px\]\:border {
    border-width: 1px;
  }

  .max-\[1200px\]\:border-\[\#555\] {
    --tw-border-opacity: 1;
    border-color: rgb(85 85 85 / var(--tw-border-opacity));
  }
}

@media not all and (min-width: 1024px) {
  .max-lg\:w-full {
    width: 100%;
  }
}

@media not all and (min-width: 768px) {
  .max-md\:gap-3 {
    gap: 0.75rem;
  }
}

@media not all and (min-width: 640px) {
  .max-sm\:mb-5 {
    margin-bottom: 1.25rem;
  }

  .max-sm\:flex {
    display: flex;
  }

  .max-sm\:w-\[100px\] {
    width: 100px;
  }

  .max-sm\:w-\[80\%\] {
    width: 80%;
  }

  .max-sm\:w-full {
    width: 100%;
  }

  .max-sm\:max-w-\[\] {
    max-width: ;
  }

  .max-sm\:max-w-\[50px\] {
    max-width: 50px;
  }

  .max-sm\:max-w-\[150px\] {
    max-width: 150px;
  }

  .max-sm\:max-w-\[750px\] {
    max-width: 750px;
  }

  .max-sm\:max-w-\[70px\] {
    max-width: 70px;
  }

  .max-sm\:flex-col {
    flex-direction: column;
  }

  .max-sm\:justify-center {
    justify-content: center;
  }

  .max-sm\:rounded-\[0px_8px_8px_0px\] {
    border-radius: 0px 8px 8px 0px;
  }

  .max-sm\:text-center {
    text-align: center;
  }

  .max-sm\:text-justify {
    text-align: justify;
  }

  .max-sm\:shadow-\[0px_0px_5px_2px_rgba\(11\2c 16\2c 79\2c 1\)\] {
    --tw-shadow: 0px 0px 5px 2px rgba(11,16,79,1);
    --tw-shadow-colored: 0px 0px 5px 2px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (max-width: 640px) {
  .max-\[640px\]\:my-\[20px\] {
    margin-top: 20px;
    margin-bottom: 20px;
  }
}

@media (min-width: 640px) {
  .sm\:-top-\[319px\] {
    top: -319px;
  }

  .sm\:my-\[100px\] {
    margin-top: 100px;
    margin-bottom: 100px;
  }

  .sm\:mb-\[100px\] {
    margin-bottom: 100px;
  }

  .sm\:mb-\[30px\] {
    margin-bottom: 30px;
  }

  .sm\:ml-\[7\%\] {
    margin-left: 7%;
  }

  .sm\:mr-\[10px\] {
    margin-right: 10px;
  }

  .sm\:mt-\[100px\] {
    margin-top: 100px;
  }

  .sm\:mt-\[175px\] {
    margin-top: 175px;
  }

  .sm\:mt-\[320px\] {
    margin-top: 320px;
  }

  .sm\:mt-\[48px\] {
    margin-top: 48px;
  }

  .sm\:mt-\[50px\] {
    margin-top: 50px;
  }

  .sm\:mt-\[62px\] {
    margin-top: 62px;
  }

  .sm\:mt-\[95px\] {
    margin-top: 95px;
  }

  .sm\:line-clamp-3 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }

  .sm\:inline {
    display: inline;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:h-\[200px\] {
    height: 200px;
  }

  .sm\:h-\[384px\] {
    height: 384px;
  }

  .sm\:h-\[735px\] {
    height: 735px;
  }

  .sm\:h-\[867px\] {
    height: 867px;
  }

  .sm\:w-\[100\%\] {
    width: 100%;
  }

  .sm\:w-\[130px\] {
    width: 130px;
  }

  .sm\:w-\[30px\] {
    width: 30px;
  }

  .sm\:w-\[50px\] {
    width: 50px;
  }

  .sm\:w-\[60px\] {
    width: 60px;
  }

  .sm\:w-\[65\%\] {
    width: 65%;
  }

  .sm\:w-\[73px\] {
    width: 73px;
  }

  .sm\:w-\[80\%\] {
    width: 80%;
  }

  .sm\:w-\[90\%\] {
    width: 90%;
  }

  .sm\:w-\[fit\] {
    width: fit;
  }

  .sm\:max-w-\[490px\] {
    max-width: 490px;
  }

  .sm\:max-w-\[496px\] {
    max-width: 496px;
  }

  .sm\:max-w-\[640px\] {
    max-width: 640px;
  }

  .sm\:max-w-\[70\%\] {
    max-width: 70%;
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .sm\:grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }

  .sm\:flex-col {
    flex-direction: column;
  }

  .sm\:justify-start {
    justify-content: flex-start;
  }

  .sm\:justify-center {
    justify-content: center;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:gap-5 {
    gap: 1.25rem;
  }

  .sm\:gap-\[130px\] {
    gap: 130px;
  }

  .sm\:gap-\[16px\] {
    gap: 16px;
  }

  .sm\:gap-\[20px\] {
    gap: 20px;
  }

  .sm\:gap-\[30px\] {
    gap: 30px;
  }

  .sm\:gap-\[32px\] {
    gap: 32px;
  }

  .sm\:gap-\[35px\] {
    gap: 35px;
  }

  .sm\:gap-\[50px\] {
    gap: 50px;
  }

  .sm\:gap-\[6px\] {
    gap: 6px;
  }

  .sm\:gap-\[96px\] {
    gap: 96px;
  }

  .sm\:gap-y-6 {
    row-gap: 1.5rem;
  }

  .sm\:rounded-\[12px\] {
    border-radius: 12px;
  }

  .sm\:rounded-\[8px\] {
    border-radius: 8px;
  }

  .sm\:p-\[30px\] {
    padding: 30px;
  }

  .sm\:px-\[32px\] {
    padding-left: 32px;
    padding-right: 32px;
  }

  .sm\:py-\[100px\] {
    padding-top: 100px;
    padding-bottom: 100px;
  }

  .sm\:py-\[10px\] {
    padding-top: 10px;
    padding-bottom: 10px;
  }

  .sm\:py-\[16px\] {
    padding-top: 16px;
    padding-bottom: 16px;
  }

  .sm\:py-\[60px\] {
    padding-top: 60px;
    padding-bottom: 60px;
  }

  .sm\:pb-\[100px\] {
    padding-bottom: 100px;
  }

  .sm\:pb-\[30px\] {
    padding-bottom: 30px;
  }

  .sm\:text-\[16px\] {
    font-size: 16px;
  }

  .sm\:text-\[18px\] {
    font-size: 18px;
  }

  .sm\:text-\[20px\] {
    font-size: 20px;
  }

  .sm\:text-\[22px\] {
    font-size: 22px;
  }

  .sm\:text-\[24px\] {
    font-size: 24px;
  }

  .sm\:text-\[25px\] {
    font-size: 25px;
  }

  .sm\:text-\[28px\] {
    font-size: 28px;
  }

  .sm\:text-\[40px\] {
    font-size: 40px;
  }

  .sm\:text-\[48px\] {
    font-size: 48px;
  }
}

@media (min-width: 768px) {
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }

  .md\:gap-\[8\%\] {
    gap: 8%;
  }

  .md\:text-\[16px\] {
    font-size: 16px;
  }

  .md\:text-\[35px\] {
    font-size: 35px;
  }
}

@media (min-width: 1024px) {
  .lg\:w-\[170px\] {
    width: 170px;
  }

  .lg\:gap-\[60px\] {
    gap: 60px;
  }

  .lg\:text-\[20px\] {
    font-size: 20px;
  }

  .lg\:text-\[35px\] {
    font-size: 35px;
  }

  .lg\:text-\[40px\] {
    font-size: 40px;
  }

  .lg\:text-\[48px\] {
    font-size: 48px;
  }
}

@media (min-width: 1200px) {
  .min-\[1200px\]\:border {
    border-width: 1px;
  }

  .min-\[1200px\]\:border-\[\#555\] {
    --tw-border-opacity: 1;
    border-color: rgb(85 85 85 / var(--tw-border-opacity));
  }
}
